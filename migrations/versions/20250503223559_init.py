"""init

Revision ID: 20250503223559
Revises: 
Create Date: 2025-05-03 22:35:59.947385

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '20250503223559'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasource',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('publisher', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('published_date', sa.DateTime(), nullable=True),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gas',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actor',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_part_of', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sa.Enum('planet', 'country', 'territory', 'adm1', 'adm2', 'city', name='actortype'), nullable=False),
    sa.Column('sovereign_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.ForeignKeyConstraint(['is_part_of'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['sovereign_code'], ['actor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gwp',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gwp100', sa.Float(), nullable=False),
    sa.Column('gas_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.ForeignKeyConstraint(['gas_id'], ['gas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emissionstotalexlulucf',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('actor_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('emissions', sa.Float(), nullable=False),
    sa.Column('units', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('energyconsumption',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('actor_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('consumption', sa.Float(), nullable=False),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gdp',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('actor_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gdp', sa.Float(), nullable=False),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('population',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('actor_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sector',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parend_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.ForeignKeyConstraint(['parend_id'], ['actor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('targets',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('actor_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_type', sa.Enum('absolute_reduction', name='targettype'), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=False),
    sa.Column('baseline_year', sa.Integer(), nullable=False),
    sa.Column('target_year', sa.Integer(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emissions',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('actor_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('sector', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('emissions', sa.Float(), nullable=False),
    sa.Column('units', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('datasource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasource.id'], ),
    sa.ForeignKeyConstraint(['sector'], ['sector.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('emissions')
    op.drop_table('targets')
    op.drop_table('sector')
    op.drop_table('population')
    op.drop_table('gdp')
    op.drop_table('energyconsumption')
    op.drop_table('emissionstotalexlulucf')
    op.drop_table('gwp')
    op.drop_table('actor')
    op.drop_table('gas')
    op.drop_table('datasource')
    # ### end Alembic commands ###
